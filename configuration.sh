PROJECT_NAME=wunderwaffe-c++

GENERATOR=Ninja

CMAKE_OUTPUT_DIR=/var/tmp/${PROJECT_NAME}
CMAKE_SOURCE_DIR=~/workspace/${PROJECT_NAME}

TOOLCHAIN_FILES+=" clang.cmake"
TOOLCHAIN_FILES+=" amd64.cmake"
TOOLCHAIN_FILES+=" mingw-gcc-amd64.cmake"
TOOLCHAIN_FILES+=" mips64-octeon2.cmake"
TOOLCHAIN_FILES+=" mips64.cmake"
TOOLCHAIN_FILES+=" arm.cmake"
TOOLCHAIN_FILES+=" ppc.cmake"


CONFIGURATIONS_SUPPORTING_TESTS+=" clang.cmake"
CONFIGURATIONS_SUPPORTING_TESTS+=" amd64.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS+=" mingw-gcc-amd64.cmake"
CONFIGURATIONS_SUPPORTING_TESTS+=" mips64.cmake"
CONFIGURATIONS_SUPPORTING_TESTS+=" mips64-octeon2.cmake"
CONFIGURATIONS_SUPPORTING_TESTS+=" arm.cmake"
CONFIGURATIONS_SUPPORTING_TESTS+=" ppc.cmake"

CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" clang.cmake"
CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" amd64.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" mingw-gcc-amd64.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" mips64.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" mips64-octeon2.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" arm.cmake"
# CONFIGURATIONS_SUPPORTING_TESTS_ON_HOST+=" ppc.cmake"

CONFIGURATIONS_SUPPORTING_RUNNING+=" clang.cmake"
CONFIGURATIONS_SUPPORTING_RUNNING+=" amd64.cmake"
CONFIGURATIONS_SUPPORTING_RUNNING+=" mingw-gcc-amd64.cmake"
# CONFIGURATIONS_SUPPORTING_RUNNING+=" mips64.cmake"
# CONFIGURATIONS_SUPPORTING_RUNNING+=" mips64-octeon2.cmake"
# CONFIGURATIONS_SUPPORTING_RUNNING+=" arm.cmake"
# CONFIGURATIONS_SUPPORTING_RUNNING+=" ppc.cmake"