#!/bin/bash

source helpers.sh

# the same configuration is used in production!
source configuration.sh


################
# Prerequisites#
################

_test_case "Checks if the configuration makes sense"

[ -d $CMAKE_SOURCE_DIR ] || _error_cmake "no ${c} $CMAKE_SOURCE_DIR directory ${r}\nCannot configure project" 

for i in ${TOOLCHAIN_FILES[*]}; do
    [ -f $i ] || _error_cmake "no ${c} $i ${r} toolchain file in ${CMAKE_SOURCE_DIR}"
done

##########
# Action #
##########

_info_cmake "will test toolchains: ${K} ${TOOLCHAIN_FILES[*]}"
./configure


########
# Tests#    
########

for i in ${TOOLCHAIN_FILES[*]}; do
    output_dirs+=" ${CMAKE_OUTPUT_DIR}-${i}"
done

for d in ${output_dirs[*]}; do
    [ -d $d ] || _error_cmake "no ${c} $d ${r} directory created"
done


_test_case "projects must build"

rm -f build.log
for d in ${output_dirs[*]}; do
    cmake --build $d --target all >> build.log
    _error_cmake "build failed for $d"
done

_test_case "projects must build tests (not run) for each target: can be run on target"

rm -f build-test.log
for d in ${output_dirs[*]}; do
    cmake --build $d --target $PROJECT_NAME-test >> build-test.log
    _error_cmake "building tests failed for $d"
done

_test_case "projects must run tests on supported (on host) targets: can be run on this host"

rm -f run-test.log
for cfg in ${CONFIGURATIONS_SUPPORTING_TESTS[*]}; do
    cmake --build ${CMAKE_OUTPUT_DIR}-${cfg} --target run-test >> run-test.log
    _error_cmake "running tests failed for $cfg"
done

_test_case "projects must run on supported (on host) targets"

for cfg in ${CONFIGURATIONS_SUPPORTING_TESTS[*]}; do
    cmake --build ${CMAKE_OUTPUT_DIR}-${cfg} --target run >> run.log
    _error_cmake "running failed for $cfg"
done
